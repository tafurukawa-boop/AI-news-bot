# -*- coding: utf-8 -*-
"""AIニュース

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B8Yqpyos50nhN8YxKg2pmQ7A-BBepk7V
"""

import feedparser
import openai
from slack_sdk.webhook import WebhookClient
import os

# --- APIキーはGitHub Secretsから取得 ---
openai.api_key = os.getenv("OPENAI_API_KEY")
slack_webhook_url = os.getenv("SLACK_WEBHOOK_URL")

# --- ニュース収集（RSSから取得） ---
def fetch_rss(feed_url, max_items=2):
    feed = feedparser.parse(feed_url)
    articles = []
    for entry in feed.entries[:max_items]:
        articles.append({
            "title": entry.title,
            "link": entry.link,
            "summary": entry.get("summary", "")
        })
    return articles

# --- GPTによる要約 ---
def summarize_article(article_text):
    prompt = f"""
    以下の記事を「人材業界×AIニュース共有会」用に要約してください。
    ✅ 世の中はどう変わるか？
    👉 重要ポイント（箇条書き）
    🟢 具体例
    ひとこと（示唆）
    """
    response = openai.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt + article_text}],
        temperature=0.5,
    )
    return response.choices[0].message.content

# --- Slack投稿 ---
def post_to_slack(title, summary, link):
    webhook = WebhookClient(slack_webhook_url)
    message = f"*{title}*\n{summary}\n<{link}|記事はこちら>"
    webhook.send(text=message)

# --- メイン処理 ---
if __name__ == "__main__":
    rss_urls = [
        "http://feeds.bbci.co.uk/news/technology/rss.xml",  # 世界AIニュース
        "https://www.hrpro.co.jp/rss/"                      # 人材×AIニュース
    ]
    for url in rss_urls:
        articles = fetch_rss(url, max_items=2)
        for article in articles:
            print(f"処理中: {article['title']}")
            summary = summarize_article(article["summary"])
            post_to_slack(article["title"], summary, article["link"])
            print("Slackに送信しました ✅")
